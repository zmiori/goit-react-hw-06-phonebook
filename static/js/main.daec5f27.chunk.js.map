{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/AddContactForm/AddContactForm.module.css","redux/items/items-types.js","redux/items/items-reducer.js","redux/filter/filter-types.js","redux/filter/filter-reducer.js","redux/store.js","redux/filter/filter-actions.js","components/Filter/Filter.js","components/Section/Section.js","components/Container/Container.js","components/AddContactForm/AddContactForm.js","components/ContactsList/ContactsList.js","App.js","redux/items/items-actions.js","index.js"],"names":["module","exports","itemsReduser","state","type","payload","actionTypes","find","contact","name","alert","filter","id","CHANGE_FILTER","filterReduser","persistConfig","key","storage","contactsReduser","combineReducers","items","rootReducer","contacts","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","changeFilter","value","Filter","onChange","className","s","text","Section","normalizedTitle","t","toUpperCase","slice","this","props","title","children","section","Component","Container","container","AddContactForm","number","nameInputId","uuidv4","numberInputId","handleChange","target","setState","handleSubmit","e","preventDefault","onSubmit","addContactForm","formItem","htmlFor","placeholder","disabled","formBtn","btnText","ContactsList","onDeleteContact","list","length","map","contactItem","contactData","onClick","connect","normalizedFilter","toLowerCase","includes","dispatch","onAddContact","addContact","deleteContact","onChangeFilter","currentTarget","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.daec5f27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3NmBl\",\"contactItem\":\"ContactsList_contactItem__3ptl6\",\"contactData\":\"ContactsList_contactData__e2khY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Vnm7\",\"text\":\"Filter_text__1guoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__24leT\",\"section\":\"Section_section__1InZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__30Xl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"AddContactForm_addContactForm__1F7F5\",\"formItem\":\"AddContactForm_formItem__1oF7b\",\"formBtn\":\"AddContactForm_formBtn__eThet\",\"btnText\":\"AddContactForm_btnText__3NK8A\"};","const ADD_CONTACT = 'contacts/addContact';\r\nconst DELETE_CONTACT = 'contacts/deleteContact';\r\n\r\nexport default { ADD_CONTACT, DELETE_CONTACT };\r\n","import actionTypes from './items-types';\r\n\r\nconst itemsReduser = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD_CONTACT:\r\n      if (state.find(contact => contact.name === payload.name)) {\r\n        alert(`${payload.name} is already in contacts`);\r\n        return state;\r\n      } else return [payload, ...state];\r\n\r\n    case actionTypes.DELETE_CONTACT:\r\n      return state.filter(contact => contact.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReduser;\r\n","const CHANGE_FILTER = 'filter/changeFilter';\r\n\r\nexport default CHANGE_FILTER;\r\n","import CHANGE_FILTER from './filter-types';\r\n\r\nconst filterReduser = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReduser;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport itemsReduser from './items/items-reducer';\r\nimport filterReduser from './filter/filter-reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n};\r\n\r\nconst contactsReduser = combineReducers({\r\n  items: itemsReduser,\r\n  filter: filterReduser,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer, composeWithDevTools());\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import CHANGE_FILTER from './filter-types';\r\n\r\nconst changeFilter = value => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default changeFilter;\r\n","import s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      <span className={s.text}>Find contacts by name:</span>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport s from './Section.module.css';\r\n\r\nclass Section extends Component {\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { title, children } = this.props;\r\n    return (\r\n      <section className={s.section}>\r\n        {title ? (\r\n          <h2 className={s.title}>{this.normalizedTitle(title)}</h2>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './AddContactForm.module.css';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.addContactForm}>\r\n        <div className={s.formItem}>\r\n          <label htmlFor={this.nameInputId}>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            id={this.nameInputId}\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className={s.formItem}>\r\n          <label htmlFor={this.numberInputId}> Number </label>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            id={this.numberInputId}\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!name}\r\n          className={`btn btn-success ${s.formItem} ${s.formBtn}`}\r\n        >\r\n          <span className={s.btnText}> Add Contact</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import { Component } from 'react';\r\nimport s from './ContactsList.module.css';\r\n\r\nclass ContactsList extends Component {\r\n  normalizedTitle = t => {\r\n    return t[0].toUpperCase() + t.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={s.list}>\r\n        {contacts.length > 0\r\n          ? contacts.map(contact => (\r\n              <li\r\n                className={s.contactItem}\r\n                key={contact.id}\r\n                name={contact.name}\r\n              >\r\n                <span className={s.contactData}>\r\n                  {this.normalizedTitle(contact.name)} : {contact.number}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"deleteBtn btn btn-outline-dark\"\r\n                  onClick={() => onDeleteContact(contact)}\r\n                >\r\n                  Удалить\r\n                </button>\r\n              </li>\r\n            ))\r\n          : 'No contacts added yet.'}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsList;\r\n","import { connect } from 'react-redux';\nimport './App.css';\n\nimport { addContact, deleteContact } from './redux/items/items-actions';\nimport changeFilter from './redux/filter/filter-actions';\n\nimport Filter from './components/Filter';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport AddContactForm from './components/AddContactForm';\nimport ContactsList from './components/ContactsList';\n\nfunction App({\n  contacts,\n  filter,\n  onAddContact,\n  onDeleteContact,\n  onChangeFilter,\n}) {\n  return (\n    <Container>\n      <h1 className=\"appTitle\">Phonebook</h1>\n      <Section>\n        <AddContactForm onSubmit={value => onAddContact(value)} />\n      </Section>\n      <Section title=\"contacts\">\n        <Filter\n          value={filter}\n          onChange={e => onChangeFilter(e.currentTarget.value)}\n        />\n        <ContactsList\n          contacts={contacts}\n          onDeleteContact={value => onDeleteContact(value)}\n        />\n      </Section>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { contacts } = state;\n  const { filter, items } = contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  return {\n    contacts: items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    ),\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: value => dispatch(addContact(value)),\n    onDeleteContact: value => dispatch(deleteContact(value)),\n    onChangeFilter: value => dispatch(changeFilter(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { v4 as uuidv4 } from 'uuid';\r\nimport actionTypes from './items-types';\r\n\r\nexport const addContact = ({ name = '', number = '' }) => ({\r\n  type: actionTypes.ADD_CONTACT,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = ({ id, name, number }) => ({\r\n  type: actionTypes.DELETE_CONTACT,\r\n  payload: {\r\n    id,\r\n    name,\r\n    number,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}